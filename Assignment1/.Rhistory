points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata_short, ylim = c(-4, 4))
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata_short, ylim = c(-4, 4), xlim = c(2005, 2011))
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(2005, 2011))
re <- ts(c(-1.63,0.28, 0.33, 0.66, 1.59, 0.51, 0.71, 0.81), start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata)
re <- ts(c(-1.63,0.28, 0.33, 0.66, 1.59, 0.51, 0.71, 0.81), start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(1990, 2011))
re <- ts(c(-1.63,0.28, 0.33, 0.66, 1.59, 0.51, 0.71, 0.81), start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(1987, 2011))
re <- ts(c(-1.63,0.28, 0.33, 0.66, 1.59, 0.51, 0.71, 0.81), start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(2005, 2011))
re <- ts(c(-1.63,0.28, 0.33, 0.66, 1.59, 0.51, 0.71, 0.81), start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(2005, 2011))
se1 <- ts(predict(ar1, n.ahead=8)$se, start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
ts.plot(seriesdata, xlim = c(1987, 2011))
se1 <- ts(predict(ar1, n.ahead=8)$se, start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
ts.plot(seriesdata, xlim = c(2005,2011))
forecast3 <- ts(predict(ar3, n.ahead=8)$pred, start = c(2009,2), frequency = 4)
se3 <- ts(predict(ar3, n.ahead=8)$se, start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(forecast3, type="l", col=4)
points(forecast3 - 1.96*se3, type="l", col=4, lty=2)
points(forecast3 + 1.96*se3, type="l", col=4, lty=2)
points(re, type="l", col=3)
ts.plot(seriesdata, xlim = c(1987,2011))
forecast3 <- ts(predict(ar3, n.ahead=8)$pred, start = c(2009,2), frequency = 4)
se3 <- ts(predict(ar3, n.ahead=8)$se, start = c(2009,2), frequency = 4)
points(forecast1, type="l", col=2)
points(forecast1 - 1.96*se1, type="l", col=2, lty=2)
points(forecast1 + 1.96*se1, type="l", col=2, lty=2)
points(forecast3, type="l", col=4)
points(forecast3 - 1.96*se3, type="l", col=4, lty=2)
points(forecast3 + 1.96*se3, type="l", col=4, lty=2)
points(re, type="l", col=3)
rmse(re, forecast1)
rmse(re, forecast3)
error1 <-  re - forecast1
error3 <- re - forecast3
dm.test(error1, error3)
View(data)
View(data)
seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast1 <- ts(predict(ar1, n.ahead=8)$pred, start = c(2009,2), frequency = 4)
forecast1
seriesdata
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
# Load data
data <- read.csv("data_assign_p2.csv")
# Load data
data2 <- read.csv("data_assign_p2.csv")
View(data2)
fmt <- "%YQ%q"
data2$obs <- as.yearqtr(data2$obs, format = fmt)
View(data2)
fmt <- "%YQ%q"
data2$obs <- as.yearqtr(data2$obs, format = fmt)
ggplot(data2, aes(obs, GDP_QGR)) +
geom_point() +
geom_line() +
scale_x_yearqtr(format = fmt)
ggplot(data2, aes(obs, UN_RATE)) +
geom_point() +
geom_line() +
scale_x_yearqtr(format = fmt)
install.packages("dLagM")
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
library(dLagM)
gdp4 <- arima(dat2a$GDP_QGR, order = c(4,0,0))
gdp4 <- arima(data2$GDP_QGR, order = c(4,0,0))
coeftest(gdp4)
gdp3 <- arima(data2$GDP_QGR, order = c(3,0,0))
coeftest(gdp3)
adl4 <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 4, q = 4)
adl4 <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 4, q = 4)
coeftest(adl4)
adl4 <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 4, q = 4)
coeftest(adl4)
load("~/GitHub/EconometricsIII/Assignment1/Assignment1.Rmd")
adl4 <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 4, q = 4)
adl4
install.packages("dynlm")
install.packages("dynlm")
install.packages("dynlm")
install.packages("dynlm")
library(dynlm)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
library(dynlm)
adl4 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:4) + L(data2$GDP_QGR, 0:4))
View(data2)
data2$GDP_QGR <- ts(data2$GDP_QGR, start = c(1987,2), frequency = 4)
data2$GDP_QGR <- ts(data2$GDP_QGR, start = c(1987,2), frequency = 4)
data2$UN_RATE <- ts(data2$UN_RATE, start = c(1987,2), frequency = 4)
adl4 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:4) + L(data2$GDP_QGR, 0:4))
adl4 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:4) + L(data2$GDP_QGR, 0:4))
adl4
adl4 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:4) + L(data2$GDP_QGR, 0:4))
coeftest(adl4, vcov. = sandwich)
adl4 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:4) + L(data2$GDP_QGR, 0:4))
coeftest(adl4)
adl3 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 0:3))
coeftest(adl3)
adl3_2 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 0:2))
coeftest(adl3_2)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 0:1))
coeftest(adl3_1)
adl3_0 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 0:0))
coeftest(adl3_1)
adl3_0 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 0:0))
coeftest(adl3_0)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 1:1))
coeftest(adl3_1)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:1, 3:3) + L(data2$GDP_QGR, 1:1))
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, 1:3) + L(data2$GDP_QGR, 1:1))
coeftest(adl3_1)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, c(1,3)) + L(data2$GDP_QGR, 1:1))
coeftest(adl3_1)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, c(1,3)) + L(data2$GDP_QGR, 1:1))
coeftest(adl3_1, adl3_0)
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, c(1,3)) + L(data2$GDP_QGR, 1:1))
coeftest(adl3_1)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
library(dynlm)
library(ardlDlm)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
library(dynlm)
library(dLagM)
adl <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 3, q = 1, remove = c(p = 2, q = 0))
adl <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 3, q = 1, remove = list(p = 2, q = 0))
# Load data
data2 <- read.csv("data_assign_p2.csv")
adl <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 3, q = 1, remove = list(p = 2, q = 0))
adl <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 3, q = 1, remove = list(p = 2, q = 0))
adl
adl3_1 <- dynlm(data2$UN_RATE ~ L(data2$UN_RATE, c(1,3)) + L(data2$GDP_QGR, 1:1))
data3 = data2
data3$GDP_QGR <- ts(data3$GDP_QGR, start = c(1987,2), frequency = 4)
data3$UN_RATE <- ts(data3$UN_RATE, start = c(1987,2), frequency = 4)
adl3_1 <- dynlm(data3$UN_RATE ~ L(data3$UN_RATE, c(1,3)) + L(data3$GDP_QGR, 1:1))
coeftest(adl3_1)
adl <- ardlDlm(x = data2$GDP_QGR, y = data2$UN_RATE, p = 1, q = 3, remove = list(p = 0, q = 2))
adl
adl3_1 <- dynlm(data3$UN_RATE ~ L(data3$UN_RATE, c(1,3)) + L(data3$GDP_QGR, 1:1))
coeftest(adl3_1)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_adl <- forecast(adl, x = forecast_ar, h = 8, interval = TRUE)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
forecast_adl <- forecast(adl, x = forecast_ar, h = 8, interval = TRUE)
forecast_adl <- forecast(adl, x = c(forecast_ar), h = 8, interval = TRUE)
View(adl)
forecast_adl <- forecast(adl, x = forecast_ar, h = 8, interval = FALSE)
forecast_adl <- forecast(adl, x = forecast_ar, h = 8, interval = TRUE,  alpha = 0.05)
forecast_adl <- forecast(adl, x = forecast_ar, h = 8, interval = TRUE)
forecast_adl <-ardlDlmForecast(adl, x = forecast_ar, h = 8, interval = TRUE)
forecast_adl <-ardlDlmForecast.main(adl, x = forecast_ar, h = 8, interval = TRUE)
forecast_adl <-ardlDlmForecast(adl, x = forecast_ar, h = 8, interval = TRUE)
forecast_adl <-dlmForecast(adl, x = forecast_ar, h = 8, interval = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(TSstudio)
library(stringr)
library(zoo)
library(ggplot2)
library(tseries)
library(stats)
library(lmtest)
library(Metrics)
library(dynlm)
library(dLagM)
forecast_adl <-arldDlmForecast(adl, x = forecast_ar, h = 8, interval = TRUE)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=1)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
View(adl)
View(adl)
adl$coefficient[0]
adl$coefficients[0]
adl$coefficients[1]
adl$coef[1]
adl$coefficients
adl$model$coefficients
adl$model$coefficients[1]
View(adl3_1)
data2$GDP_QGR <- rbind(data2$GDP_QGR, forecast_ar)
n <- length(data2)
n <- length(data2$obs)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
data2$GDP_QGR <- rbind(data2$GDP_QGR, forecast_ar)
data2$GDP_QGR <- rbind(data2$GDP_QGR, data.frame(forecast_ar))
data2$GDP_QGR <- cbind(data2$GDP_QGR, data.frame(forecast_ar))
data2$GDP_QGR <- rbind(data2$GDP_QGR, data.frame(forecast_ar))
data.frame(forecast_ar)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- data.frame(as.numeric(forecast_ar))
n <- length(data2$obs)
data2$GDP_QGR <- rbind(data2$GDP_QGR, data.frame(GDP_QGR = forecast_ar))
n <- length(data2$obs)
data2$GDP_QGR <- rbind(data2, data.frame(GDP_QGR = forecast_ar))
n <- length(data2$obs)
data2 <- rbind(data2, data.frame(GDP_QGR = forecast_ar))
View(forecast_ar)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- data.frame(as.numeric(forecast_ar))
forecast_ar <- names(GDP_QGR)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- data.frame(as.numeric(forecast_ar))
names(forecast_ar) <- GDP_QGR
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- data.frame(as.numeric(forecast_ar))
names(forecast_ar) <- c(GDP_QGR)
View(forecast_ar)
names(forecast_ar)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- data.frame(as.numeric(forecast_ar))
names(forecast_ar) <- c("GDP_QGR")
View(forecast_ar)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
forecast_ar <-predict(gdp3, n.ahead=8)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
#names(forecast_ar) <- c("GDP_QGR")
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
h = 8
forecast_ar <-predict(gdp3, n.ahead=h)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
GDP_QGR <- cbind(as.numeric(data2$GDP_QGR), forecast_ar)
UN_RATE <- cbind(as.numeric(data2$UN_RATE), numeric(h))
#names(forecast_ar) <- c("GDP_QGR")
View(GDP_QGR)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
h = 8
forecast_ar <-predict(gdp3, n.ahead=h)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
GDP_QGR <- rbind(as.numeric(data2$GDP_QGR), forecast_ar)
UN_RATE <- rbind(as.numeric(data2$UN_RATE), numeric(h))
#names(forecast_ar) <- c("GDP_QGR")
View(GDP_QGR)
# seriesdata <- ts(data$GDP_QGR, start= c(1987, 2), end = c(2009, 1), frequency = 4)
h = 8
forecast_ar <-predict(gdp3, n.ahead=h)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
GDP_QGR <- append(as.numeric(data2$GDP_QGR), forecast_ar)
UN_RATE <- append(as.numeric(data2$UN_RATE), numeric(h))
#names(forecast_ar) <- c("GDP_QGR")
n <- length(data2$obs)
for (i in 1:h){
j = i + n
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] (-1)+ adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + n
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
print(UN_RATE)
UN_RATE <- ts(UN_RATE, start = c(1987, 2), frequency = 4)
UN <- ts_split(UN_RATE, sample.out = 8)
ts.plot(UN$train, xlim = c(1987, 2017))
points(UN$test, type="l", col=2)
ts.plot(UN$train, xlim = c(2000, 2017))
points(UN$test, type="l", col=2)
UN$test
summary(adl3_1)
summary(adl3_1)$residual
summary(adl3_1)$error
summary(adl3_1)$error
test <- summary(adl3_1)
summary(adl3_1)$sigma
fe1 <- summary(adl3_1)$sigma
pnorm(7.8, mean = UN_RATE[109], sd = fe1)
pnorm(7.8, mean = UN_RATE[109], sd = fe1)
1 - pnorm(7.8, mean = UN_RATE[109], sd = fe1)
"The probability that it is below 7.8:"
pnorm(7.8, mean = UN_RATE[109], sd = fe1)
"The probability that it is above 7.8:"
1 - pnorm(7.8, mean = UN_RATE[109], sd = fe1)
pnorm(0, mean=forecast1[1], sd = se1[1])
ar3$coef
ar3$coef[4]
h = 25
forecast_ar <-predict(gdp3, n.ahead=h)$pred
forecast_ar
forecast_ar <- as.numeric(forecast_ar)
GDP_QGR <- append(as.numeric(data2$GDP_QGR), numeric(h))
UN_RATE <- append(as.numeric(data2$UN_RATE), numeric(h))
n <- length(data2$obs)
GDP_QGR[n+1] = 2
for (i in 1:h){
j = i + n
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + n
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(1987, 2), frequency = 4)
UN <- ts_split(UN_RATE, sample.out = 8)
ts.plot(UN$train, xlim = c(1987, 2017))
points(UN$test, type="l", col=2)
ts.plot(UN$train, xlim = c(1987, 2021))
points(UN$test, type="l", col=2)
UN_RATE <- ts(UN_RATE, start = c(1987, 2), frequency = 4)
UN <- ts_split(UN_RATE, sample.out = h)
ts.plot(UN$train, xlim = c(1987, 2021))
points(UN$test, type="l", col=2)
ts.plot(UN$test)
h = 25
GDP_QGR <- append(rep(data2$GDP_QGR[n],3), numeric(h))
UN_RATE <- append(rep(data2$UN_RATE[n],3), numeric(h))
GDP_QGR[3+1] = 2
for (i in 1:h){
j = i + n
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
GDP_QGR[3+1] = 2
for (i in 1:h){
j = i + 3
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(1987, 2), frequency = 4)
UN <- ts_split(UN_RATE, sample.out = h)
ts.plot(UN$train, xlim = c(1987, 2021))
points(UN$test, type="l", col=2)
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(2013, 3), frequency = 4)
ts.plot(UN_RATE, xlim = c(2013, 2021))
GDP_QGR <- ts(GDP_QGR, start = c(2013, 3), frequency = 4)
ts.plot(GDP_QGR, xlim = c(2013, 2021))
h = 200
GDP_QGR <- append(rep(data2$GDP_QGR[n],3), numeric(h))
UN_RATE <- append(rep(data2$UN_RATE[n],3), numeric(h))
GDP_QGR[3+1] = 2
for (i in 1:h){
j = i + 3
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
GDP_QGR <- ts(GDP_QGR, start = c(2013, 3), frequency = 4)
ts.plot(GDP_QGR, xlim = c(2013, 2021))
GDP_QGR <- ts(GDP_QGR, start = c(2013, 3), frequency = 4)
ts.plot(GDP_QGR)
ts.plot(UN_RATE)
h = 200
GDP_QGR <- append(rep(data2$GDP_QGR[n],3), numeric(h))
UN_RATE <- append(rep(data2$UN_RATE[n],3), numeric(h))
GDP_QGR[3+1] = -2
for (i in 1:h){
j = i + 3
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(2013, 3), frequency = 4)
ts.plot(UN_RATE)
GDP_QGR <- ts(GDP_QGR, start = c(2013, 3), frequency = 4)
ts.plot(GDP_QGR)
ts.plot(UN_RATE)
h = 200
GDP_QGR <- append(rep(data2$GDP_QGR[n],3), numeric(h))
UN_RATE <- append(rep(data2$UN_RATE[n],3), numeric(h))
GDP_QGR[3+1] = 2
for (i in 1:h){
j = i + 3
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(2013, 3), frequency = 4)
ts.plot(UN_RATE)
UN_RATE
h = 200
GDP_QGR <- append(rep(data2$GDP_QGR[n],3), numeric(h))
UN_RATE <- append(rep(data2$UN_RATE[n],3), numeric(h))
GDP_QGR[3+1] = -2
for (i in 1:h){
j = i + 3
GDP_QGR[j] <- GDP_QGR[j] + ar3$coef[4] + ar3$coef[1] * GDP_QGR[j-1] + ar3$coef[2] * GDP_QGR[j-2] + ar3$coef[3] * GDP_QGR[j-3]
}
n <- length(data2$obs)
for (i in 1:h){
j = i + 3
UN_RATE[j] <- adl3_1$coefficient[1] + adl3_1$coefficient[2] * UN_RATE[j-1] + adl3_1$coefficient[3] * UN_RATE[j-3] + adl3_1$coefficient[4] * GDP_QGR[j-1]
}
UN_RATE <- ts(UN_RATE, start = c(2013, 3), frequency = 4)
ts.plot(UN_RATE)
UN_RATE
